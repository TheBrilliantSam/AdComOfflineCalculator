// Currently supported balances: All AdCom events and All AdAges events!

// Entering amounts is not case sensitive, but please use the dot decimal point (.) for tenths and beyond (parser ignores commas).
// If you don't enter a placeholder value for a generator at the end of an industry, the program will ignore it.
// An empty string in amounts is interpreted as 0.

import java.util.*;
public class Offline {
    public static void main(String args[]) {

      ///////////////////////////
      ////  USER INPUT AREA  ////
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      /**/  String eventName = "dino";
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      ////  GENERATOR AMOUNTS: enter RESOURCE AMOUNT followed by generators separated by a slash [/]; insert ampersand [&] between industries
      /**/  String amounts = "0/145.9mm/1.04jj/6.98ff/40.53bb/378.4m/104 & 15.5nn/120.5jj/67ff/51.1bb/191.33m & 13.67jj/27.1ff/22.72bb/106.83m & 24.5aa/10.10m";
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      ////  COMMON LEVELS: enter researcher levels in hexadecimal, add a space in between industries
      /**/  String commons = "555551 5554 554 3";
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      ////  RARE CARDS: enter researcher levels in hexadecimal, add whitespaces or symbols as you see fit for organization
      /**/  String rares = "33 44 22 00 3302";
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      ////  CALCULATE FOR A DURATION OF TIME
      /**/  boolean timeCalculationEnabled = false;
      /**/  String time = "8h"; // separate consecutive times with semicolon [;]
      /**/  int industry = 0; // enter 0 for all industries
      /**/  boolean randomize = false; // randomize crits for generators with under 500 runs, denoted by asterisk [*]
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      ////  CALCULATE UNTIL A MISSION COMPLETES
      /**/  boolean missionCalculationEnabled = !timeCalculationEnabled;
      /**/  String target = "3-98jj&2-17oo"; // format: [INDUSTRY]-[TARGET]. separate concurrent targets with ampersand [&], consecutive targets with semicolon [;]
      /**/  boolean printAllIndustries = true; // target industry is printed by default, but you can choose to print all industries in addition
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      ////  GLOBAL SETTINGS
      /**/  double boost = 2;
      /**/  boolean resetResource = false;
      /**/  boolean print = true;
      /**/  boolean emoji = true;
      /**/  boolean useSpeedBoostsInstead = false; // if emoji is disabled, commons details will show speed boost instead of card level
      /**/  boolean strengthOfProduction = true;
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      ////  RARE RESEARCHERS HELP (this will disable any calculations)
      /**/  boolean help = false;
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
      Event evt = new Event(eventName);
      
      if(evt.isValid() && help) evt.printRareDetails();
      
      if(evt.isValid() && !help && Operations.determineTimeValidity(time)){
          
          String[][] amountsArr = Operations.parseAmounts(amounts);
          int[][] commonArr = Operations.parseCommons(commons);
          int[] rareArr = Operations.parseRares(rares);
          
          if(timeCalculationEnabled) evt.calculateOffline(industry, amountsArr, commonArr, rareArr, time, boost, randomize, resetResource, print, emoji, useSpeedBoostsInstead, strengthOfProduction);
          
          if(missionCalculationEnabled) evt.offlineUntilResource(target, amountsArr, commonArr, rareArr, boost, resetResource, print, printAllIndustries, emoji, useSpeedBoostsInstead, strengthOfProduction);
          
          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          //  CALCULATION METHODS GUIDE
          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          //  calculateOffline(int ind, String[][] amounts, int[][] commons, int[] rares, Time dur, boolean boost, boolean rand, boolean reset, boolean print, boolean emoji, boolean speedBoost, boolean strength);
          //  offlineUntilResource(String tarAmm, int tarInd, String[][] amounts, int[][] commons, int[] rares, boolean boost, boolean rand, boolean reset, boolean print, boolean printAll, boolean emoji, boolean speedBoost, boolean strength)
          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          
          // Add any additional calculations below.
          
     
      }

    }
}